{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"fastest-slider.js","sourcesContent":["// prefix: fasl\r\n\r\nvar FastestSlider = function(option) {\r\n  // element\r\n  this.group = '';\r\n  this.items = '';\r\n  this.prevArrow = '';\r\n  this.nextArrow = '';\r\n\r\n  this.prefix = 'fasl';\r\n  this.option = {};\r\n  this.currentItemIndex = 0;\r\n  this.userOption = option;\r\n  this.defaultOption = {\r\n    // required\r\n    selector: '',\r\n\r\n    // non-required\r\n    autoSlide: false,\r\n    slideSpeed: 2000,\r\n    isDebug: false,\r\n    prevArrow: '',\r\n    nextArrow: '',\r\n  };\r\n\r\n  // callback\r\n  this.callback = {\r\n    beforeChange: [],\r\n    afterChange: [],\r\n  };\r\n\r\n  // interval\r\n  this.interval = null;\r\n\r\n  /*================================================================ Util\r\n   */\r\n  \r\n  /**\r\n   * Returns ture if browser if IE\r\n   * \r\n   * @return {boolean}\r\n   */\r\n  this.isIe = function() {\r\n    var myNav = navigator.userAgent.toLowerCase();\r\n\r\n    return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : false;\r\n  };\r\n\r\n  /**\r\n   * Set element's data attribute\r\n   *\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/Element/setAttribute\r\n   * \r\n   * @param {Object} ele\r\n   * @param {string} attrName\r\n   * @param {string} value\r\n   * \r\n   * @return {Object} ele\r\n   */\r\n  this.setAttr = function(ele, attrName, value) {\r\n    return ele.setAttribute('data-' + this.prefix + '-' + attrName, value);\r\n  };\r\n\r\n  /**\r\n   * Get element's data attribute\r\n   *\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/Element/setAttribute\r\n   * \r\n   * @param {Object} ele\r\n   * @param {string} attrName\r\n   * \r\n   * @return {Object} ele\r\n   */\r\n  this.getAttr = function(ele, attrName) {\r\n    return ele.getAttribute('data-' + this.prefix + '-' + attrName);\r\n  };\r\n\r\n  /**\r\n   * Check number is in a range ?\r\n   * \r\n   * @see http://stackoverflow.com/questions/12806304/shortest-code-to-check-if-a-number-is-in-a-range-in-javascript\r\n   * @see http://stackoverflow.com/questions/6454198/check-a-range-of-numbers-in-an-if-condition\r\n   * \r\n   * @param {number} x\r\n   * @param {number} min\r\n   * @param {number} max\r\n   * @return {boolean}\r\n   */\r\n  this.isBetween = function(x, min, max) {\r\n    return x >= min && x <= max;\r\n  };\r\n\r\n  /*================================================================ Plugin util\r\n   */\r\n  \r\n  /**\r\n   * Show element\r\n   * remove css class that hide the element\r\n   * \r\n   * @param {Object} ele\r\n   * @return {Object} ele\r\n   */\r\n  this.showElement = function(ele) {\r\n    ele.classList.remove('fasl-hide');\r\n\r\n    return ele;\r\n  };\r\n\r\n  /**\r\n   * Hide element\r\n   * add css class that hide the element\r\n   * \r\n   * @param {Object} ele\r\n   * @return {Object} ele\r\n   */\r\n  this.hideElement = function(ele) {\r\n    ele.classList.add('fasl-hide');\r\n\r\n    return ele;\r\n  };\r\n\r\n  /**\r\n   * Initialize prev arrow \r\n   */\r\n  this.initPrevArrow = function() {\r\n    var self = this;\r\n\r\n    if (this.option.prevArrow) {\r\n      this.prevArrow = document.querySelector(this.option.prevArrow);\r\n\r\n      if (this.prevArrow) {\r\n        this.prevArrow.onclick = function(event) {\r\n          event.preventDefault();\r\n\r\n          self.slideToPrevItem();\r\n        };\r\n\r\n      } else {\r\n        this.log('invalid prevArrow');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialize next arrow\r\n   */\r\n  this.initNextArrow = function() {\r\n    var self = this;\r\n\r\n    if (this.option.nextArrow) {\r\n      this.nextArrow = document.querySelector(this.option.nextArrow);\r\n\r\n      if (this.nextArrow) {\r\n        this.nextArrow.onclick = function(event) {\r\n          event.preventDefault();\r\n\r\n          self.slideToNextItem();\r\n        };\r\n\r\n      } else {\r\n        this.log('invalid nextArrow');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialize slider\r\n   */\r\n  this.initSlider = function() {\r\n    this.items = this.group.children;\r\n\r\n    if (this.items && this.items.length > 1) {\r\n\r\n      // hide all\r\n      for (var i = 0; i < this.items.length; i++) {\r\n        var ele = this.items[i];\r\n\r\n        this.setAttr(ele, 'index', i);\r\n        this.hideElement(ele);\r\n      }\r\n\r\n      // show the first\r\n      this.showElement(this.items[0]);\r\n      this.currentItemIndex = 0;\r\n\r\n      // set interval\r\n      if (this.option.autoSlide) {\r\n        this.startInterval(this.option.slideSpeed);\r\n      }\r\n\r\n      // set prev arrow\r\n      this.initPrevArrow();\r\n\r\n      // set next arrow\r\n      this.initNextArrow();\r\n\r\n    } else {\r\n      this.log('one item found');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Log\r\n   */\r\n  this.log = function(title, data) {\r\n    if (typeof data === 'undefined') { data = ''; }\r\n    if (this.option.isDebug) { console.log(this.option.selector + ' ' + title, data); }\r\n  };\r\n\r\n  /**\r\n   * Check the goToIndex is valid or not\r\n   * \r\n   * @param {number} index - integer number\r\n   * @return {boolean}\r\n   */\r\n  this.isValidGoToIndex = function(index) {\r\n    return this.isBetween(index, 0, this.items.length);\r\n  };\r\n\r\n  /*================================================================ API\r\n   */\r\n  \r\n  /**\r\n   * Set interval\r\n   * - auto slide\r\n   */\r\n  this.startInterval = function(ms) {\r\n    if (typeof ms === 'undefined') { ms = this.option.slideSpeed; }\r\n    var self = this;\r\n    \r\n    this.stopInterval();\r\n    this.interval = setInterval(function() {\r\n      self.slideToNextItem();\r\n\r\n    }, ms);\r\n  };\r\n\r\n  /**\r\n   * Stop interval\r\n   */\r\n  this.stopInterval = function() {\r\n    clearInterval(this.interval);\r\n  };\r\n\r\n  /**\r\n   * Slide to next slide\r\n   * caller\r\n   */\r\n  this.goToNext = function() {\r\n    this.slideToNextItem();\r\n  };\r\n\r\n  /**\r\n   * Slide to prev slide\r\n   * caller\r\n   */\r\n  this.goToPrev = function() {\r\n    this.slideToPrevItem();\r\n  };\r\n\r\n  /**\r\n   * Slide to slide by slide's index\r\n   * caller \r\n   * \r\n   * @param {string|number} goToIndex\r\n   */\r\n  this.goTo = function(goToIndex) {\r\n    if (goToIndex === '-1') {\r\n      this.slideToPrevItem();\r\n\r\n    } else if (goToIndex === '+1') {\r\n      this.slideToNextItem();\r\n      \r\n    } else {\r\n      goToIndex = parseInt(goToIndex);\r\n\r\n      if (this.isValidGoToIndex(goToIndex)) {\r\n        this.slideTo(goToIndex);\r\n\r\n      } else {\r\n        this.log('invalid goToIndex')\r\n      }\r\n    }\r\n  };\r\n\r\n  /*================================================================ API - Custom event\r\n   */\r\n  \r\n  /**\r\n   * Adding callback event\r\n   * TODO: refactor, eventName validatiion\r\n   * \r\n   * @param {string} eventName\r\n   * @param {function} callback\r\n   */\r\n  this.on = function(eventName, callback) {\r\n    if (typeof callback === 'function') {\r\n      switch (eventName) {\r\n        case 'beforeChange':\r\n          this.callback.beforeChange.push(callback);\r\n          break;\r\n        case 'afterChange':\r\n          this.callback.afterChange.push(callback);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Release beforeChange event\r\n   */\r\n  this.releaseBeforeChangeEvent = function() {\r\n    this.releaseEvent('beforeChange');\r\n  };\r\n\r\n  /**\r\n   * Release afterChange event\r\n   */\r\n  this.releaseAfterChangeEvent = function() {\r\n    this.releaseEvent('afterChange');\r\n  };\r\n\r\n  /**\r\n   * Release event by event name\r\n   * \r\n   * @param {string} eventName - plugin's event name\r\n   */\r\n  this.releaseEvent = function(eventName) {\r\n    if (this.callback[eventName]) {\r\n      var nEvents = this.callback[eventName].length,\r\n        i = 0;\r\n\r\n      for (i = 0; i < nEvents; i++) {\r\n        this.callback[eventName][i]();\r\n      }\r\n    }\r\n  };\r\n\r\n  /*================================================================ Others\r\n   */\r\n  \r\n  /**\r\n   * Get prev-slide's index\r\n   */\r\n  this.getPrevItemIndex = function() {\r\n    var result = (this.currentItemIndex <= 0) ? this.items.length - 1 : this.currentItemIndex - 1;\r\n\r\n    return result;\r\n  };\r\n  \r\n  /**\r\n   * Get next-slide's index\r\n   */\r\n  this.getNextItemIndex = function() {\r\n    var result = (this.currentItemIndex >= this.items.length - 1) ? 0 : this.currentItemIndex + 1;\r\n\r\n    return result;\r\n  };\r\n  \r\n  /**\r\n   * Slide to next slide\r\n   */\r\n  this.slideToNextItem = function() {\r\n    var nextIndex = this.getNextItemIndex();\r\n\r\n    this.slideTo(nextIndex);\r\n  };\r\n\r\n  /**\r\n   * Slide to prev slide\r\n   */\r\n  this.slideToPrevItem = function() {\r\n    var prevIndex = this.getPrevItemIndex();\r\n\r\n    this.slideTo(prevIndex);\r\n  };\r\n\r\n  /**\r\n   * Slide to slide by slide's index \r\n   * \r\n   * @param {number} slideToIndex\r\n   */\r\n  this.slideTo = function(slideToIndex) {\r\n    var currentIndex = this.currentItemIndex;\r\n\r\n    // dispatch\r\n    this.releaseBeforeChangeEvent();\r\n    \r\n    this.hideElement(this.items[currentIndex]);\r\n    this.showElement(this.items[slideToIndex]);\r\n    this.currentItemIndex = slideToIndex;\r\n\r\n    // dispatch\r\n    this.releaseAfterChangeEvent();\r\n  };\r\n\r\n  /**\r\n   * Initialize plugin\r\n   * - validate data\r\n   * - initialize\r\n   */\r\n  this.init = function() {\r\n    // this.option = Object.assign(this.defaultOption, this.userOption);\r\n\r\n    // TODO: improve it\r\n    this.option.selector = this.userOption.selector || this.defaultOption.selector;\r\n    this.option.autoSlide = this.userOption.autoSlide || this.defaultOption.autoSlide;\r\n    this.option.slideSpeed = this.userOption.slideSpeed || this.defaultOption.slideSpeed;\r\n    this.option.isDebug = this.userOption.isDebug || this.defaultOption.isDebug;\r\n    this.option.prevArrow = this.userOption.prevArrow || this.defaultOption.prevArrow;\r\n    this.option.nextArrow = this.userOption.nextArrow || this.defaultOption.nextArrow;\r\n\r\n    if (this.option.selector) {\r\n      try {\r\n        this.group = document.querySelector(this.option.selector);\r\n        this.initSlider();\r\n\r\n      } catch (e) {\r\n        this.log('error', e);\r\n      }\r\n\r\n    } else {\r\n      this.log('invalid selector');\r\n    }\r\n  };\r\n\r\n  // start\r\n  this.init();\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports != null) {\r\n  exports = FastestSlider;\r\n}\r\n"]}